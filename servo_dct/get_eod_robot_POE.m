clc;
clear;
close all;
%%
P_base = [0.2574, -0.36339, 0.496];
P_L1 = [0.3074, -0.1624, 0.43511];          P_R1 = [0.2075, -0.57363, 0.43942];
P_L2 = [0.3074, -0.21279, 0.54349];         P_R2 = [0.2075, -0.5124, 0.57086];
P_L3 = [0.06146, -0.14913, 0.40667];        P_R3 = [0.63219, -0.57329, 0.44037];
P_L4 = [-0.19386, -0.14913, 0.40667];       P_R4 = [1.01664, -0.57329, 0.44037];
P_L5 = [-0.19386, -0.19564, 0.50635];       P_R5 = [1.01664, -0.52678, 0.54005];
P_L6 = [-0.19386, -0.29542, 0.45979];       P_R6 = [1.01664, -0.42701, 0.49349];
P_Ltool = [-0.19286, -0.36518, 0.6174];     P_Rgr = [1.01664, -0.31368, 0.73633];%可以修改 远：[1.01664, -0.2574, 0.85694] 中：[1.01664, 0.31368, 0.73633] 近：[1.01664, -0.31368, 0.73633]
P_L0 = [0.3074, -0.2261, 0.40538];          P_R0 = [0.2074, -0.50068, 0.40538];
P_L30 = [0.06146, -0.24276, 0.60731];       P_R30 = [0.63219, -0.48261, 0.63469];
P_L60 = [-0.19386, -0.26953, 0.40434];      P_R60 = [1.01664, -0.45289, 0.43803];
%% 右臂参数
R_H1 = norm(P_R1 - P_R0);  
R_H2 = norm(P_R6 - P_R5);
R_V3 = P_R3 - P_R30;
R_V3_norm = R_V3 / norm(R_V3);
R_L1 = norm(cross(R_V3_norm,P_R2 - P_R30));
R_V4 = P_R5 - P_R4;
R_V4_norm = R_V4 / norm(R_V4);
R_L2 = norm(cross(R_V4_norm,P_R3 - P_R4));
R_V51 = P_R5 - P_R1;
R_V21 = P_R2 - P_R1;
R_V21_norm = R_V21 / norm(R_V21);
R_W1 = dot(R_V51, R_V21_norm);
R_W2 = norm(P_Rgr - P_R6);
fprintf("R_H1 = %f\n", R_H1);
fprintf("R_H2 = %f\n", R_H2);
fprintf("R_L1 = %f\n", R_L1);
fprintf("R_L2 = %f\n", R_L2);
fprintf("R_W1 = %f\n", R_H1);
fprintf("R_W2 = %f\n", R_W2);
R_omg1 = [0; 0; 1];   R_v1= [0; 0; 0];
R_omg2 = [0; 1; 0];   R_v2= [-R_H1; 0; 0];
R_omg3 = [0; 1; 0];   R_v3= [-R_H1; 0; R_L1];
R_omg4 = [0; 1; 0];   R_v4= [-R_H1; 0; R_L1 + R_L2];
R_omg5 = [0; 0; -1];  R_v5= [-R_W1; R_L1 + R_L2; 0];
R_omg6 = [0; 1; 0];   R_v6= [R_H2 - R_H1; 0; R_L1 + R_L2];
fprintf("R_omg1 = [%f, %f, %f]  ", R_omg1); fprintf("R_v1 = [%f, %f, %f]  \n", R_v1);
fprintf("R_omg2 = [%f, %f, %f]  ", R_omg2); fprintf("R_v2 = [%f, %f, %f]  \n", R_v2);
fprintf("R_omg3 = [%f, %f, %f]  ", R_omg3); fprintf("R_v3 = [%f, %f, %f]  \n", R_v3);
fprintf("R_omg4 = [%f, %f, %f]  ", R_omg4); fprintf("R_v4 = [%f, %f, %f]  \n", R_v4);
fprintf("R_omg5 = [%f, %f, %f]  ", R_omg5); fprintf("R_v5 = [%f, %f, %f]  \n", R_v5);
fprintf("R_omg6 = [%f, %f, %f]  ", R_omg6); fprintf("R_v6 = [%f, %f, %f]  \n", R_v6);
R_M_p = [R_L1 + R_L2; R_W1 + R_W2; R_H1 - R_H2];
R_M_R = [-1, 0, 0; 0, 0, 1; 0, 1, 0];
%% 左臂参数
L_H1 = norm(P_L1 - P_L0);  
L_H2 = norm(P_L6 - P_L5);
L_V3 = P_L3 - P_L30;
L_V3_norm = L_V3 / norm(L_V3);
L_L1 = norm(cross(L_V3_norm,P_L2 - P_L30));
L_V4 = P_L5 - P_L4;
L_V4_norm = L_V4 / norm(L_V4);
L_L2 = norm(cross(L_V4_norm,P_L3 - P_L4));
L_V51 = P_L5 - P_L1;
L_V21 = P_L2 - P_L1;
L_V21_norm = L_V21 / norm(L_V21);
L_W1 = dot(L_V51, L_V21_norm);
L_W2 = norm(P_Ltool - P_L6);
fprintf("L_H1 = %f\n", L_H1);
fprintf("L_H2 = %f\n", L_H2);
fprintf("L_L1 = %f\n", L_L1);
fprintf("L_L2 = %f\n", L_L2);
fprintf("L_W1 = %f\n", L_H1);
fprintf("L_W2 = %f\n", L_W2);
L_omg1 = [0; 0; 1];   L_v1= [0; 0; 0];
L_omg2 = [0; 1; 0];   L_v2= [-L_H1; 0; 0];
L_omg3 = [0; 1; 0];   L_v3= [-L_H1; 0; L_L1];
L_omg4 = [0; 1; 0];   L_v4= [-L_H1; 0; L_L1 + L_L2];
L_omg5 = [0; 0; -1];  L_v5= [-L_W1; L_L1 + L_L2; 0];
L_omg6 = [0; 1; 0];   L_v6= [L_H2 - L_H1; 0; L_L1 + L_L2];
fprintf("L_omg1 = [%f, %f, %f]  ", L_omg1); fprintf("L_v1 = [%f, %f, %f]\n", L_v1);
fprintf("L_omg2 = [%f, %f, %f]  ", L_omg2); fprintf("L_v2 = [%f, %f, %f]\n", L_v2);
fprintf("L_omg3 = [%f, %f, %f]  ", L_omg3); fprintf("L_v3 = [%f, %f, %f]\n", L_v3);
fprintf("L_omg4 = [%f, %f, %f]  ", L_omg4); fprintf("L_v4 = [%f, %f, %f]\n", L_v4);
fprintf("L_omg5 = [%f, %f, %f]  ", L_omg5); fprintf("L_v5 = [%f, %f, %f]\n", L_v5);
fprintf("L_omg6 = [%f, %f, %f]  ", L_omg6); fprintf("L_v6 = [%f, %f, %f]\n", L_v6);
L_M_p = [L_L1 + L_L2; L_W1 + L_W2; L_H1 - L_H2];
L_M_R = [-1, 0, 0; 0, 0, 1; 0, 1, 0];
%% 右臂POE
R_Slist = [R_omg1', R_v1'; R_omg2', R_v2'; R_omg3', R_v3'; R_omg4', R_v4'; R_omg5', R_v5'; R_omg6', R_v6']';
R_M = [R_M_R, R_M_p; 0 0 0 1];
disp("R_Slist: ");
disp(R_Slist);
disp("R_M: ");
disp(R_M);
%% 左臂
L_Slist = [L_omg1', L_v1'; L_omg2', L_v2'; L_omg3', L_v3'; L_omg4', L_v4'; L_omg5', L_v5'; L_omg6', L_v6']';
disp("L_Slist: ");
disp(L_Slist);
L_M = [L_M_R, L_M_p; 0 0 0 1];
disp("L_M: ");
disp(L_M);
%% 双臂相对于基座
angle = 115.02 / 180 * pi;
R_base_R = [[1; 0; 0], [0; cos(pi - angle); sin(pi - angle)], [0; -sin(pi - angle); cos(pi - angle)]];
P_base_R = (P_R0 - P_base)';
T_base_R = [R_base_R, P_base_R; 0 0 0 1];
R_base_L = [[-1; 0; 0], [0; -cos(pi - angle); sin(pi - angle)], [0; sin(pi - angle); cos(pi - angle)]];
P_base_L = (P_L0 - P_base)';
T_base_L = [R_base_L, P_base_L; 0 0 0 1];
disp("T_base_R: ");
disp(T_base_R);
disp("T_base_L: ");
disp(T_base_L);
%% 检验
% 右
R_WorkPos = deg2rad([180-180;  -25; 45; -90;  -155; 0]);
R_FronPos = deg2rad([180-270;  -150; 0; -90;  -90; 0]);
R_BehiPos = deg2rad([180-90; -25;  0; -90; 90; 0]);
R_StanPos = deg2rad([180-90;  -25;  0; -90; 90; -90]);
R_T_WorkPos = T_base_R * FKinSpace(R_M,R_Slist,R_WorkPos);
R_T_FronPos = T_base_R * FKinSpace(R_M,R_Slist,R_FronPos);
R_T_BehiPos = T_base_R * FKinSpace(R_M,R_Slist,R_BehiPos);
R_T_StanPos = T_base_R * FKinSpace(R_M,R_Slist,R_StanPos);
% disp("R_T_WorkPos: ");  disp(R_T_WorkPos);
% disp("R_T_FronPos: ");  disp(R_T_FronPos);
% disp("R_T_BehiPos: ");  disp(R_T_BehiPos);
% disp("R_T_StanPos: ");  disp(R_T_StanPos);
% 左
L_WorkPos = deg2rad([  0;  -155; -45; -90;  155; 0;]);
L_FronPos = deg2rad([ 90 ; -25;  0; -90;  90; 0;]);
L_BehiPos = deg2rad([-90 ; -155;  0; -90; -90; 0;]);
L_StanPos = deg2rad([-90;  -155;   0; -90; -90; -90;]);
L_ZeroPos = deg2rad([ -0 ; -90;    0; -90;   0; -90;]);
L_T_WorkPos = T_base_L * FKinSpace(L_M,L_Slist,L_WorkPos);
L_T_FronPos = T_base_L * FKinSpace(L_M,L_Slist,L_FronPos);
L_T_BehiPos = T_base_L * FKinSpace(L_M,L_Slist,L_BehiPos);
L_T_StanPos = T_base_L * FKinSpace(L_M,L_Slist,L_StanPos);
L_T_ZeroPos = T_base_L * FKinSpace(L_M,L_Slist,L_ZeroPos);
% disp("L_T_WorkPos: ");  disp(L_T_WorkPos);
% disp("L_T_FronPos: ");  disp(L_T_FronPos);
% disp("L_T_BehiPos: ");  disp(L_T_BehiPos);
% disp("L_T_StanPos: ");  disp(L_T_StanPos);
% disp("L_T_ZeroPos: ");  disp(L_T_ZeroPos);
